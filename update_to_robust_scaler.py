#!/usr/bin/env python3
"""
Script para actualizar sklearn_pipeline.py con RobustScaler
basado en an√°lisis de outliers
"""

import sys
from pathlib import Path

file_path = Path("acoustic_ml/modeling/sklearn_pipeline.py")

if not file_path.exists():
    print(f"‚ùå Error: No se encuentra {file_path}")
    sys.exit(1)

content = file_path.read_text()

# Cambiar de 'standard' a 'robust'
old_line = """        # Pipeline completo SIN OutlierRemover (no elimina filas)
        self.feature_pipeline = create_full_pipeline(
            exclude_cols=None,
            remove_outliers=False,  # ‚ö†Ô∏è Cr√≠tico: False para no eliminar filas
            scale_method='standard'
        )"""

new_line = """        # Pipeline completo SIN OutlierRemover (no elimina filas)
        # Usando RobustScaler basado en an√°lisis de outliers
        # Decisi√≥n: RobustScaler es m√°s robusto a outliers (usa mediana e IQR)
        self.feature_pipeline = create_full_pipeline(
            exclude_cols=None,
            remove_outliers=False,  # ‚ö†Ô∏è Cr√≠tico: False para no eliminar filas
            scale_method='robust'  # ‚úÖ RobustScaler para manejo de outliers
        )"""

if old_line in content:
    content = content.replace(old_line, new_line)
    file_path.write_text(content)
    print("‚úÖ Pipeline actualizado: scale_method='robust'")
    print("   ‚Üí RobustScaler usa mediana (Q2) e IQR")
    print("   ‚Üí Menos sensible a valores extremos")
    print("   ‚Üí Best practice MLOps para datos con outliers")
else:
    print("‚ö†Ô∏è  No se encontr√≥ el patr√≥n exacto")
    print("   Buscando alternativas...")
    
    # Intentar solo reemplazar el par√°metro
    if "scale_method='standard'" in content:
        content = content.replace("scale_method='standard'", "scale_method='robust'")
        file_path.write_text(content)
        print("‚úÖ Pipeline actualizado: scale_method='robust'")
    else:
        print("‚ùå No se pudo actualizar autom√°ticamente")
        print("   Por favor, cambia manualmente: scale_method='robust'")
        sys.exit(1)

print("\nüìä Diferencias entre scalers:")
print("   StandardScaler:")
print("     - Usa media y desviaci√≥n est√°ndar")
print("     - Sensible a outliers extremos")
print("     - X_scaled = (X - mean) / std")
print("\n   RobustScaler:")
print("     - Usa mediana (Q2) e IQR (Q3-Q1)")
print("     - Robusto a outliers")
print("     - X_scaled = (X - median) / IQR")
