#!/usr/bin/env python3
"""
Suprimir Warning Cosm√©tico de MLflow

El warning es solo informativo y no afecta funcionalidad.
El modelo se guarda correctamente con signature y example.
"""

import sys
from pathlib import Path

file_path = Path("acoustic_ml/modeling/train.py")

if not file_path.exists():
    print(f"‚ùå Error: No se encuentra {file_path}")
    sys.exit(1)

content = file_path.read_text()

# Agregar supresi√≥n de warning al inicio del m√©todo
old_method_start = """    def _log_to_mlflow(self, X, y):
        mlflow.set_tracking_uri(self.training_config.mlflow_tracking_uri)"""

new_method_start = """    def _log_to_mlflow(self, X, y):
        import warnings
        # Suprimir warning deprecation cosm√©tico de artifact_path
        warnings.filterwarnings('ignore', category=FutureWarning, module='mlflow')
        
        mlflow.set_tracking_uri(self.training_config.mlflow_tracking_uri)"""

if old_method_start in content:
    content = content.replace(old_method_start, new_method_start)
    file_path.write_text(content)
    print("‚úÖ Warning suprimido")
    print("   ‚Üí FutureWarning de MLflow filtrado")
    print("   ‚Üí Funcionalidad intacta")
    print("   ‚Üí Output 100% limpio")
else:
    print("‚ùå No se encontr√≥ el patr√≥n")
    sys.exit(1)

print("\nüìù Nota t√©cnica:")
print("   ‚Ä¢ El warning es solo informativo")
print("   ‚Ä¢ MLflow 2.8+ prefiere 'name' sobre 'artifact_path'")
print("   ‚Ä¢ Ambos funcionan igual (backward compatible)")
print("   ‚Ä¢ La supresi√≥n es pr√°ctica est√°ndar en producci√≥n")
